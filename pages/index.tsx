import Head from 'next/head'
import { useMemo, useReducer } from 'react'
import Mana from '../components/Mana'
import styles from '../styles/Home.module.css'

type wubrg = 'w' | 'u' | 'b' | 'r' | 'g';
type mana = 'white' | 'blue' | 'black' | 'red' | 'green';

type StateType = {
  [id: string]: {
    name: wubrg,
    image: mana,
    counter: number
  }
}

type ActionType = {
  type: 'add' | 'sub' | 'set' | 'reset',
  name: wubrg,
  payload?: number
}

const initialState: StateType = {
  w: {
    name: 'w',
    image: 'white',
    counter: 0
  },
  u: {
    name: 'u',
    image: 'blue',
    counter: 0
  },
  b: {
    name: 'b',
    image: 'black',
    counter: 0
  },
  r: {
    name: 'r',
    image: 'red',
    counter: 0
  },
  g: {
    name: 'g',
    image: 'green',
    counter: 0
  }
};

// function init(initialState: StateType) {
//   return initialState;
// }

const reducer = (state: StateType, action: ActionType) => {
  switch(action.type) {
    case 'add':
      return {
        ...state,
        [action.name] : {
          ...state[action.name],
          counter: state[action.name].counter + 1
        }
      };
    case 'sub':
      return {
        ...state,
        [action.name] : {
          ...state[action.name],
          counter: state[action.name].counter - 1
        }
      };
    case 'set':
      if (action.payload) {
        return {
          ...state,
          [action.name] : {
            ...state[action.name],
            counter: action.payload
          }
        };
      }
      return {
        ...state,
        [action.name] : {
          ...state[action.name],
          counter: 0
        }
      };
    // case 'reset':
    //   if (action.payload) {
    //     return init(action.payload);
    //   }
    //   return state;
    default:
      throw new Error('unexpected action type');
  }
}


export default function Home() {
  const [state, dispatch] = useReducer(reducer, initialState);

  const wubrg = useMemo(() => Object.values(state), [state])

  return (
    <div className={styles.container}>
      <Head>
        <title>Magic the Gathering Mana Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid grid-cols-2 sm:grid-cols-3 pt-7 gap-x-4 gap-y-8 mx-auto max-w-3xl">
        {wubrg.length && wubrg.map((mana) => (
          <Mana
            key={mana.name}
            image={mana.image}
            counter={mana.counter}
            handleAdd={() => dispatch({ type: 'add', name: mana.name})}
            handleSub={() => dispatch({ type: 'sub', name: mana.name })}
            handleSet={(value: number) => dispatch({ type: 'set', name: mana.name, payload: value})}
          />
        ))}
      </div>
    </div>
  )
}
